{%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}

{% capture icon_caret %}
  <svg aria-hidden="true" focusable="false" role="presentation" class="icon-caret" viewBox="0 0 10 6">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor">
  </svg>
{% endcapture %}

{% capture icon_close %}
  <svg  aria-hidden="true" focusable="false" role="presentation" width="12" height="13" class="icon-close-small" viewBox="0 0 12 13" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M8.48627 9.32917L2.82849 3.67098" stroke="#333030" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M2.88539 9.38504L8.42932 3.61524" stroke="#333030" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>
{% endcapture %}

{% assign sidebar = false %}
{% assign topbar = false %}
{% if section.settings.desktop_position == 'sidebar' %}
  {% assign sidebar = true %}
{% else %}
  {% assign topbar = true %}
{% endif %}

{% assign blocksCount = section.blocks | size %}
{% if blocksCount > 0 %}
  <div class="collection-items{% if sidebar%} sidebar{% else %} topbar{%endif%}">
    {% for block in section.blocks %}
      {% case block.type %}

        {% when 'image' %}
          {% assign hasImage = false %}
          {% if collection.image %}
            {% assign hasImage = true %}
            {% assign image = collection.image | img_url: 'large' %}
          {% else %}
            {% assign image = collection.products.first | img_url: 'large' %}
          {% endif %}

          {% assign imageSize = '470x' %}

          <article class="collection-items--image grid has-image" data-collection="{{ collection.handle }}">
                {% assign image_default = collection.image | img_url: '540x' %}

                {% if collection.image %}
                  {% assign useImage = collection.image %}
                {% else %}
                  {% assign useImage = collection.products.first.media[0].preview_image %}
                {% endif %}

                {%-
                  render 'image-bg',
                  image: useImage,
                  image_class: 'collection-image',
                  image_link: collection.url,
                  image_sizes: false,
                  image_link_class: '',
                  image_tabindex: '-1',
                  image_dimension: 'half',
                  image_default: image_default,
                -%}
          </article>

        {% when 'title' %}
          {% if collection.products.size > 0 %}
            <div class="collection-items--title medium">
                <div class="collection-items--title-content grid-item-100">
                  <div class="collection-items--title-content-inner">
                    <header>
                      <h2 class="collection-title">{{ collection.title }}</h2>
                    </header>
                  </div>
                </div>
              </div>
          {% endif %}

        {% when 'description' %}
          {% if collection.description != blank %}
            <div class="collection-items--description">{{ collection.description }}</div>
          {% endif %}

      {% endcase %}
    {% endfor %}
  </div>
{% endif %}

<div class="collection-filters {% if sidebar%} sidebar-filters{% else %} topbar-filters{%endif%}" id="main-collection-filters" data-id="{{ section.id }}">

  {%- if section.settings.enable_filtering == true or section.settings.enable_sorting == true -%}
    <button type="button" class="mobile-facets__open button" data-drawer-open-btn>
      Filter / Sort
    </button>

    {%- assign total_active_values = 0 -%}
    <collection-filtering-form class="facets" data-filter-form>
      <form id="CollectionFiltersForm" class="facets__form">
        <div class="navigation-toggle" style="">
          <button
            data-drawer-close-btn
            aria-label="Close navigation"
            type="button"
            class="active"
          >
            <span class="navigation-toggle-inner">
              {{ icon_close }}
            </span>
          </button>
        </div>

        <div class="facets__form-inner">
          {% if section.settings.enable_filtering == true %}
            <div class="facets__wrapper">
              {%- unless collection.filters == empty -%}
                <p class="facets__heading">{{ 'sections.collection_template.filter_by_label' | t }}</p>
              {%- endunless -%}

              {%- for filter in collection.filters -%}
                {%- assign total_active_values = total_active_values | plus: filter.active_values.size -%}
                {% case filter.type %}

                {% when 'list' %}
                  <details class="disclosure-has-popup facets__disclosure js-filter" data-index="{{ forloop.index }}">
                    <summary class="facets__summary">
                      <div>
                        <span>{{ filter.label | escape }}</span>
                        <span class="count-bubble">{%- if filter.active_values.size > 0 -%}{{ filter.active_values.size }}{%- endif -%}</span>
                        {{ icon_caret }}
                      </div>
                    </summary>
                    <div class="facets__display">
                      <div class="facets__header">
                        <span class="facets__selected no-js-hidden">{{ 'sections.collection_template.filters_selected' | t: count: filter.active_values.size }}</span>
                        <a href="{{ filter.url_to_remove }}" class="facets__reset link underlined-link js-facet-remove" >{{ 'sections.collection_template.reset' | t }}</a>
                      </div>

                      <ul class="facets__list list-unstyled" role="list">
                        {%- for value in filter.values -%}
                          <li class="list-menu__item facets__item">
                            <label for="Filter-{{ filter.label | escape }}-{{ forloop.index }}" class="facet-checkbox{% if value.count == 0 and value.active == false %} facet-checkbox--disabled{% endif %}">
                              <input type="checkbox"
                                name="{{ value.param_name }}"
                                value="{{ value.value }}"
                                id="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                                {% if value.active %}checked{% endif %}
                                {% if value.count == 0 and value.active == false %}disabled{% endif %}
                              >

                              <svg width="16" height="16" viewBox="0 0 16 16" aria-hidden="true" focusable="false">
                                <rect width="16" height="16" stroke="currentColor" fill="none" stroke-width="1"></rect>
                              </svg>

                              <svg class="icon-checkmark" aria-hidden="true" focusable="false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 9" fill="none" width="10px" height="10px">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M11.35.643a.5.5 0 01.006.707l-6.77 6.886a.5.5 0 01-.719-.006L.638 4.845a.5.5 0 11.724-.69l2.872 3.011 6.41-6.517a.5.5 0 01.707-.006h-.001z" fill="currentColor"/>
                              </svg>
                              {{ value.label | escape }} ({{ value.count }})
                            </label>
                          </li>
                        {%- endfor -%}
                      </ul>
                    </div>
                  </details>

                {% when 'price_range' %}
                  {% liquid
                    assign currencies_using_comma_decimals = 'ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND' | split: ','
                    assign uses_comma_decimals = false
                    if currencies_using_comma_decimals contains cart.currency.iso_code
                      assign uses_comma_decimals = true
                    endif
                  %}
                  <details class="disclosure-has-popup facets__disclosure js-filter" data-index="{{ forloop.index }}">
                    <summary class="facets__summary">
                      <div>
                        <span>{{ filter.label | escape }}</span>
                        <span class="count-bubble{%- if filter.min_value.value or filter.max_value.value -%}{{ filter.active_values.size }} count-bubble--dot{% endif %}"></span>
                        {{ icon_caret }}
                      </div>
                    </summary>
                    <div class="facets__display">
                      <div class="facets__header">
                        {%- assign max_price_amount = filter.range_max | money | escape -%}
                        <span class="facets__selected">{{ "sections.collection_template.max_price" | t: price: max_price_amount }}</span>
                        <a href="{{ filter.url_to_remove }}" class="facets__reset link underlined-link js-facet-remove" >{{ 'sections.collection_template.reset' | t }}</a>
                      </div>

                      <price-range-selector class="facets__price">
                        <div class="field">
                          <span class="field__currency">{{ cart.currency.symbol }}</span>
                          <input class="field__input"
                            name="{{ filter.min_value.param_name }}"
                            id="Filter-{{ filter.label | escape }}-min_value"
                            {%- if filter.min_value.value -%}
                              {%- if uses_comma_decimals -%}
                                value="{{ filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                              {%- else -%}
                                value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                              {% endif %}
                            {%- endif -%}
                            type="number"
                            placeholder="0"
                            min="0"
                            max="{{ filter.range_max | money_without_currency | replace: ',', '' }}">
                          </input>
                          <label class="field__label" for="Filter-{{ filter.label | escape }}-min_value">{{ 'sections.collection_template.from' | t }}</label>
                        </div>
                        <div class="field">
                          <span class="field__currency">{{ cart.currency.symbol }}</span>
                          <input class="field__input"
                            name="{{ filter.max_value.param_name }}"
                            id="Filter-{{ filter.label | escape }}-max_value"
                            {%- if filter.max_value.value -%}
                              {%- if uses_comma_decimals -%}
                                value="{{ filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                              {%- else -%}
                                value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                              {% endif %}
                            {%- endif -%}
                            type="number"
                            placeholder="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                            min="0"
                            max="{{ filter.range_max | money_without_currency | replace: ',', '' }}">
                          </input>
                          <label class="field__label" for="Filter-{{ filter.label | escape }}-max_value">{{ 'sections.collection_template.to' | t }}</label>
                        </div>
                      </div>
                    </price-range-selector>
                  </details>

                {% endcase %}
              {%- endfor -%}
              <noscript>
                <button type="submit" class="facets__button button">{{ 'sections.collection_template.filter_button' | t }}</button>
              </noscript>
            </div>

            <div class="active-facets active-facets-desktop">
              <a href="{{ collection.url }}?sort_by={{ sort_by }}" class="active-facets__button btn button--secondary js-facet-remove">{{ 'sections.collection_template.clear_all' | t }}</a>
              {%- for filter in collection.filters -%}
                {%- for value in filter.active_values -%}
                  <a class="active-facets__button active-facets__button--light btn button--tertiary js-facet-remove" href="{{ value.url_to_remove }}">
                    {{ value.label | escape }}
                    {{ icon_close }}
                  </a>
                {%- endfor -%}
                {% if filter.type == "price_range" %}
                  {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
                    <a class="active-facets__button active-facets__button--light btn button--tertiary js-facet-remove" href="{{ filter.url_to_remove }}">
                      {%- if filter.min_value.value -%}{{ filter.min_value.value | money }}{%- else -%}{{ 0 | money }}{%- endif -%}-{%- if filter.max_value.value -%}{{ filter.max_value.value | money }}{%- else -%}{{ filter.range_max | money }}{%- endif -%}
                      {{ icon_close }}
                    </a>
                  {%- endif -%}
                {% endif %}
              {%- endfor -%}
            </div>
          {% endif %}

          {% if collection.current_vendor or collection.current_type %}
            <input type="hidden" name="q" value="{{ collection.current_vendor }}{{ collection.current_type }}">
          {% endif %}

          {%- if section.settings.enable_sorting == true -%}
            <div class="collection-filters__item sorting">
              <div class="collection-filters__field">
                <label class="collection-filters__label" for="SortBy">{{ 'sections.collection_template.sort_by_label' | t }}</label>
                <div class="select">
                  {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                  <select name="sort_by" class="select__select collection-filters__sort" id="SortBy" aria-describedby="a11y-refresh-page-message">
                    {%- for option in collection.sort_options -%}
                      <option value="{{ option.value | escape }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name | escape }}</option>
                    {%- endfor -%}
                  </select>
                  {{ icon_caret }}
                </div>
              </div>

              <noscript>
                <button type="submit" class="button button--small">{{ 'sections.collection_template.sort_button' | t }}</button>
              </noscript>
            </div>
          {%- endif -%}
        </div>
      </form>
    </collection-filtering-form>

    <div class="container">
        <div class="active-facets active-facets-mobile">
            <a href="{{ collection.url }}?sort_by={{ sort_by }}" class="active-facets__button btn button--secondary js-facet-remove">{{ 'sections.collection_template.clear_all' | t }}</a>

            {%- for filter in collection.filters -%}
                {%- for value in filter.active_values -%}
                    <a class="active-facets__button active-facets__button--light btn button--tertiary js-facet-remove" href="{{ value.url_to_remove }}">
                        {{ value.label | escape }}
                        {{ icon_close }}
                    </a>
                {%- endfor -%}

                {% if filter.type == "price_range" %}
                    {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
                    <a class="active-facets__button active-facets__button--light btn button--tertiary js-facet-remove" href="{{ filter.url_to_remove }}">
                        {%- if filter.min_value.value -%}{{ filter.min_value.value | money }}{%- else -%}{{ 0 | money }}{%- endif -%}-{%- if filter.max_value.value -%}{{ filter.max_value.value | money }}{%- else -%}{{ filter.range_max | money }}{%- endif -%}
                        {{ icon_close }}
                    </a>
                    {%- endif -%}
                {% endif %}
            {%- endfor -%}
        </div>
    </div>
  {%- endif -%}
</div>

<script src="{{ 'filtering.js' | asset_url }}" defer="defer"></script>

<style>
  .collection-wrapper {
    --filter-border-color: var(--border-color);
    --filter-text-color: var(--body-color);
    --filter-font-family: var(--primary-font);
    --filter-font-style: var(--body-font-style);
    --filter-font-weight: var(--body-font-weight);
    --filter-body-font-size: var(--body-size);
    --filter-base-font-size: var(--body-size);
    --filter-body-font-size-12-em: var(--body-font-size-12-to-em);
    --filter-background-color: var(--background-color);
    --filter-color-background-rgb: var(--color-primary-background-rgb);
  }

  /* Select */
  summary .icon-caret,
  .select .icon-caret,
  .customer select + svg {
    height: 0.4rem;
    pointer-events: none;
    position: absolute;
    top: calc(50% - 0.2rem);
    right: 1rem;
  }

  .select__select,
  .customer select {
    cursor: pointer;
    padding: 0 4rem 0 1.5rem;
    padding: 0 2.5rem 0 0.8rem
  }

  .field {
    position: relative;
    width: 100%;
    display: flex;
  }

  .field__input,
  .select__select {
    font-size: 1.3rem;
    line-height: 1.5;
    letter-spacing: 0.04rem;
  }

  .field__label,
  .customer .field label {
    font-size: .8rem;
    left: 1.5rem;
    top: 1rem;
    margin-bottom: 0;
    pointer-events: none;
    position: absolute;
    transition: top 100ms ease,
    font-size 100ms ease;
    letter-spacing: 0.1rem;
    line-height: 1.5;
  }

  .field__input:focus,
  .field__input:not(:placeholder-shown),
  .field__input:-webkit-autofill,
  .customer .field input:focus,
  .customer .field input:not(:placeholder-shown),
  .customer .field input:-webkit-autofill {
    padding: 2.2rem 1.5rem 0.8rem;
  }

  .field__input::-webkit-search-cancel-button,
  .customer .field input::-webkit-search-cancel-button {
    display: none;
  }

  .field__input::placeholder,
  .customer .field input::placeholder {
    opacity: 0;
  }

  /* component-form */
  .field__input,
  .select__select,
  .customer .field input,
  .customer select {
    -webkit-appearance: none;
    appearance: none;
    background-color: transparent;
    border: 0;
    border-radius: 0;
    color: var(--filter-text-color);
    font-size: 1.2rem;
    width: 100%;
    box-shadow: 0 0 0 0.1rem var(--filter-border-color);
    height: 2.9rem;
    box-sizing: border-box;
    transition: box-shadow 100ms ease;
  }

  .field__input,
  .customer .field input {
    flex-grow: 1;
    text-align: left;
    padding: 1.5rem;
  }

  .field__input:hover,
  .select__select:hover,
  .customer .field input:hover,
  .customer select:hover,
  .localization-form__select:hover {
    box-shadow: 0 0 0 0.2rem var(--filter-border-color);
  }

  .field__input:focus-visible,
  .select__select:focus-visible,
  .field input:focus-visible {
    box-shadow: 0 0 0 0.1rem -webkit-focus-ring-color,
    0 0 0 0.3rem var(--filter-border-color),
    0 0 0.5rem 0.4rem -webkit-focus-ring-color;
  }

  .field__input:focus,
  .select__select:focus,
  .field input:focus {
    box-shadow: 0 0 0 0.1rem -webkit-focus-ring-color,
    0 0 0 0.3rem var(--filter-border-color),
    0 0 0.5rem 0.4rem -webkit-focus-ring-color;
  }

  .facets__summary:focus-visible,
  .facets__summary:focus {
    border: solid var(--filter-border-color) 1px;
  }

  .field__input:focus ~ .field__label,
  .field__input:not(:placeholder-shown) ~ .field__label,
  .field__input:-webkit-autofill ~ .field__label,
  .customer .field input:focus ~ label,
  .customer .field input:not(:placeholder-shown) ~ label,
  .customer .field input:-webkit-autofill ~ label {
    font-size: .7rem;
    top: 0.3em;
    letter-spacing: 0.04rem;
  }

  .field__input:focus,
  .field__input:not(:placeholder-shown),
  .field__input:-webkit-autofill,
  .customer .field input:focus,
  .customer .field input:not(:placeholder-shown),
  .customer .field input:-webkit-autofill {
    padding: 1.5rem 1rem 0.8rem;
  }

  .field__input::-webkit-search-cancel-button,
  .customer .field input::-webkit-search-cancel-button {
    display: none;
  }

  .field__input::placeholder,
  .customer .field input::placeholder {
    opacity: 0;
  }

  .select__select {
    font-family: var(--filter-font-family);
    font-style: var(--filter-font-style);
    font-weight: var(--filter-font-weight);
    font-size: var(--filter-body-font-size);
    color: var(--filter-text-color);

    @media screen and (max-width: 768px) {
      font-size: 16px !important;
    }
  }

  .text-area,
  .select {
    display: inline-block;
    position: relative;
    width: 100%;
  }

  /* base-details-summary */
  summary {
    cursor: pointer;
    list-style: none;
    position: relative;
  }

  summary::-webkit-details-marker {
    display: none;
  }

  .disclosure-has-popup {
    position: relative;
  }

  @media screen and (min-width: 769px) {
    .disclosure-has-popup[open] > summary::before {
      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 2;
      display: block;
      cursor: default;
      content: ' ';
      background: transparent;
    }
  }

  .disclosure-has-popup > summary::before {
    display: none;
  }

  .disclosure-has-popup[open] > summary + * {
    z-index: 101;
  }

  .collection {
    position: relative;
    width: 100%;
  }

  @media screen and (max-width: 768px) {
    .collection .title:not(.title--no-heading) {
      margin-top: -1rem;
    }
  }

  @media screen and (min-width: 769px) {
    .collection .title-wrapper-with-link--no-heading {
      margin-top: 6rem;
    }
  }

  .collection .grid__item,
  .template-search .grid__item {
    padding-bottom: 2rem;
  }

  .collection-product-count {
    margin-top: 0;
    font-size: var(--filter-base-font-size);
  }

  @media screen and (min-width: 769px) {
    .collection-product-count {
      margin-top: 1.5rem;
    }
  }

  .template-search .grid__item--small {
    padding-bottom: 0.5rem;
  }

  .collection.loading .collection-product-count {
    visibility: hidden;
  }

  @media screen and (max-width: 768px) {
    .collection .grid__item:only-child {
      flex: 0 0 100%;
      max-width: 100%;
    }
  }

  @media screen and (min-width: 769px) {
    .collection .grid__item,
    .template-search .grid__item {
      padding-bottom: 5rem;
    }

    .template-search .grid__item--small {
      padding-bottom: 1rem;
    }
  }

  .collection .negative-margin,
  .template-search .negative-margin {
    margin-bottom: -2rem;
  }

  @media screen and (min-width: 769px) {
    .collection .negative-margin,
    .template-search .negative-margin {
      margin-bottom: -5rem;
    }
  }

  @media screen and (min-width: 769px) {
    .collection .negative-margin--small {
      margin-bottom: -1rem;
    }
  }

  .collection .loading-overlay {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: none;
    width: 100%;
    padding: 0 5rem;
    background-color: rgba(var(--filter-color-background-rgb), 0.7);
  }

  .collection.loading .loading-overlay {
    display: block;
  }

  .collection--empty .title-wrapper {
    margin-top: 10rem;
    margin-bottom: 15rem;
  }

  .collection-filters {
    display: flex;
    flex-direction: column;
    padding-top: 24px;
    border-bottom: 1px solid var(--border-color);
    margin-bottom: 24px;
  }

  .index-wrapper .collection-wrapper .collection-filtering-section {
    margin-top: 0;
    margin-bottom: 0;
  }

  {%- if section.settings.desktop_position == 'topbar'-%}
    {%- unless section.settings.enable_filtering == true or section.settings.enable_sorting == true -%}
      .collection-filters {
        padding-top: 0;
        border-bottom: 0;
      }
    {%- endunless -%}
  {%- endif -%}

  {%- if section.settings.desktop_position == 'topbar' -%}
    .collection-filters {
      margin-bottom: 0;
    }

    @media screen and (max-width: 768px) {
      .index-wrapper .collection-wrapper .collection-filtering-section {
        margin-bottom: 24px;
      }

      a.active-facets__button {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        position: relative;
        display: flex;
        align-items: center;
      }

      a.active-facets__button:not(:first-child) {
        padding-right: calc(var(--body-size)*2.5);
      }

      .active-facets__button svg {
        position: absolute;
        right: 10px;
        top: 10px;
      }
    }
  {%- endif -%}

  @media screen and (min-width: 769px) {
    .collection-filters {
      display: block;
      margin-bottom: 24px;
    }

    .collection-filters > * + * {
      margin-top: 0;
    }
  }

  .collection-filters__label {
    display: block;
    color: var(--filter-text-color);
    font-size: var(--filter-base-font-size);
    line-height: 1;
    margin: 0 0 1rem;
    width: 100%;
  }

  .collection-filters__summary {
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: var(--filter-base-font-size);
    cursor: pointer;
    height: 4.5rem;
    padding: 0 1.5rem;
    min-width: 25rem;
    margin-top: 2.4rem;
    border: 0.1rem solid var(--filter-border-color);
  }

  .collection-filters__summary::after {
    position: static;
  }

  .collection-filters__item {
    display: flex;
    grid-column: 2;
    grid-row: 1;
  }

  .collection-filters__field {
    flex-grow: 1;
    max-width: 100%;
  }

  .collection-filters__item button {
    padding: var(--filter-font-size 2.6rem);
    margin-left: 1rem;
  }

  .collection-filters__disclosure {
    min-width: 25rem;
  }

  .collection-filters__disclosure summary::after {
    top: 0;
  }

  .collection-filters__disclosure a {
    color: var(--filter-text-color);
    cursor: pointer;
    display: block;
    padding: 1.2rem;
    text-transform: capitalize;
    text-decoration: none;
  }

  @media screen and (min-width: 769px) {
    .collection-filters .collection-filters__sort {
      width: 25rem;
      max-width: 100%;
    }
  }

  .facets {
    display: block;
  }

  .facets__form-inner {
    display: grid;
    grid-template-columns: auto auto;
    grid-template-rows: auto auto;
    gap: 2.5rem 2rem;
  }

  @media screen and (max-width: 768px) {
    .facets__form-inner {
      margin-top: 50px;
    }
  }

  .js .facets__form-inner {
    grid-template-columns: calc(100% - 27rem) 25rem;
  }

  .facets__wrapper {
    grid-column: 1;
    grid-row: 1;
    display: flex;
    flex-wrap: wrap;
    margin-left: -0.5rem;
  }

  .facets__heading {
    display: block;
    color: black;
    font-size: var(--filter-base-font-size);
    line-height: 1;
    margin: 0 0 1rem 0.5rem !important;
    width: 100%;
  }

  .facets__reset {
    margin-left: auto;
  }

  .facets__disclosure {
    border: 1px solid var(--filter-border-color);
    margin: 0 0 0.5rem 0.5rem;
    transition: box-shadow 100ms ease;
  }

  .facets__disclosure:hover {
    box-shadow: 0 0 0 0.1rem var(--filter-border-color);
  }

  .facets__summary {
    padding: .6rem 2.5rem .6rem 0.8rem;
    font-size: var(--filter-body-font-size);
    color: var(--filter-text-color);
  }

  @media screen and (max-width: 768px) {
    .facets__summary {
      font-size: 16px !important;
    }
  }

  .facets__summary > span {
    line-height: 1.3;
  }

  .facets__display {
    background-color: var(--filter-background-color);
    border-top: 1px solid var(--filter-border-color);
    overflow-y: auto;
  }

  @media screen and (min-width: 769px) {
    .facets__display {
      border: 1px solid var(--filter-border-color);
      max-height: 55rem;
      position: absolute;
      top: calc(100% + 0.5rem);
      left: -0.1rem;
      width: 35rem;
    }
  }

  .facets__header {
    border-bottom: 1px solid var(--filter-border-color);
    padding: 1rem 1.2rem;
    display: flex;
    justify-content: space-between;
    font-size: var(--filter-base-font-size);
    position: sticky;
    top: 0;
    background-color: var(--filter-background-color);
    z-index: 1;
  }

  .facets__list {
    padding: 1rem 0;
    margin-bottom: 0;
  }

  .facets__item {
    display: flex;
    align-items: center;
  }

  .facets__item label,
  .facets__item input[type='checkbox'] {
    cursor: pointer;
  }

  .facet-checkbox {
    padding: .5rem 1rem .5rem .6rem;
    flex-grow: 1;
    position: relative;
    font-size: var(--filter-base-font-size);
    display: flex;
    word-break: break-word;
  }

  .facet-checkbox input[type='checkbox'] {
    position: absolute;
    opacity: 1;
    width: 1.2rem;
    height: 1.2rem;
    top: 0.4rem;
    left: 0.5rem;
    z-index: -1;
    appearance: none;
    -webkit-appearance: none;
    border-bottom: none;
  }

  .facet-checkbox > svg {
    background-color: var(--filter-background-color);
    margin-right: 1.2rem;
    flex-shrink: 0;
  }

  .facet-checkbox .icon-checkmark {
    visibility: hidden;
    position: absolute;
    left: .9rem;
    z-index: 5;
    top: .8rem;
  }

  .facet-checkbox > input[type='checkbox']:checked ~ .icon-checkmark {
    visibility: visible;
  }

  .facet-checkbox--disabled {
    color: var(--filter-border-color);
  }

  .facets__price {
    display: flex;
    padding: 2rem;
  }

  .facets__price > * + * {
    margin-left: 2rem;
  }

  .facets__price .field {
    align-items: center;
  }

  .facets__price .field .field__currency {
    margin-right: 0.6rem;
  }

  .facets__price .field__label {
    left: 2.1rem;
  }

  button.facets__button {
    min-height: 0;
    margin: 0 0 0 0.5rem;
    box-shadow: none;
    padding-top: var(--filter-base-font-size);
    padding-bottom: var(--filter-base-font-size);
  }

  .active-facets {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    margin-left: -1rem;
    grid-column: 1 / span 2;
    grid-row: 2;
  }

  .active-facets-desktop {
    order: -1;
  }

  .active-facets-mobile {
    line-height: 1.4em;
  }

  @media all and (min-width: 769px) {
    .active-facets-mobile {
      display: none;
    }
  }

  a.active-facets__button {
    color: var(--filter-text-color);
    box-shadow: 0 0 0 0.1rem var(--filter-border-color);
    border-radius: 2.6rem;
    font-size: var(--body-size);
    min-height: 0;
    min-width: 0;
    padding: calc(var(--body-size)/2) 1rem;
    margin: 0 0 1rem 1rem;
    height: calc(var(--body-size)*2.5);
  }

  a.active-facets__button:not(:first-child) {
    padding-left: 1.6rem;
    padding-right: calc(var(--body-size)*2.5);
    position: relative;
  }

  a.active-facets__button:last-child {
    margin-bottom: 24px;
  }

  a.active-facets__button {
    box-shadow: 0 0 0 0.1rem var(--filter-border-color);
  }

  a.active-facets__button:hover {
    box-shadow: 0 0 0 0.2rem var(--filter-border-color);
  }

  a.active-facets__button--light {
    box-shadow: 0 0 0 0.1rem var(--filter-border-color);
  }

  a.active-facets__button--light:hover {
    box-shadow: 0 0 0 0.2rem var(--filter-border-color);
  }

  a.active-facets__button:focus-visible,
  a.active-facets__button:focus {
    box-shadow: 0 0 0 0.1rem var(--filter-border-color),
      0 0 0 0.2rem var(--filter-background-color), 0 0 0 0.4rem -webkit-focus-ring-color;
    outline: none;
  }

  .active-facets__button svg {
    width: calc(var(--body-size)*2);
    height: calc(var(--body-size)*1.3);
    pointer-events: none;
    position: absolute;
    right: 6px;
    top: 25%;
  }

  .active-facets__button:only-child {
    display: none;
  }

  .active-facets__button.disabled {
    pointer-events: none;
  }

  .count-bubble {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.7rem;
    width: 1.1rem;
    height: 1.1rem;
    border-radius: 50%;
    background-color: var(--primary-btn-bg-color);
    color: var(--filter-background-color);
    margin-left: 0.5rem;
  }

  .count-bubble:empty {
    visibility: hidden;
  }

  .count-bubble--dot:empty {
    visibility: visible;
  }

  .count-bubble--dot::before {
    content: '';
    width: 0.2rem;
    height: 0.2rem;
    display: block;
    background-color: var(--filter-background-color);
    border-radius: 50%;
  }

  .facets__summary > div {
    display: flex;
    align-items: center;
  }

  .sorting .button {
    margin-top: 2.4rem;
    padding-top: 1.3rem;
  }

  .spaced-section--full-width {
    width: 100%;
  }

  .collection-wrapper {
    display: flex;
    flex-wrap: wrap;
  }

  .collection-filtering-section {
    width: 100%;
  }

  @media screen and (min-width: 769px) {
    .drawer-close-btn {
      display: none !important;
    }
  }

  .mobile-facets__open {
    text-align: center;
    width: 100%;
    margin-bottom: 24px;
  }

  @media screen and (min-width: 769px) {
    .mobile-facets__open {
      display: none;
    }
  }
  .mobile-facets__open > * + * {
    margin-left: 1rem;
  }

  .mobile-facets__open svg {
    width: 2rem;
  }

  .mobile-facets__open line,
  .mobile-facets__open circle {
    stroke: var(--color-button-border);
  }

  details[open] .mobile-facets__open {
    visibility: hidden;
  }

  @media screen and (max-width: 768px) {
    .facets__form {
      border-top: 1px solid var(--border-color);
      position: fixed;
      top: 51px;
      bottom: 0;
      left: 0;
      z-index: 1000002;
      background-color: white;
      max-width: 100%;
      width: 100%;
      transition: opacity 100ms ease-in-out;
      padding: 24px;
      overflow-y: auto;
      opacity: 0;
      visibility: hidden;
    }

    collection-filtering-form.is-open .facets__form {
      opacity: 1;
      visibility: visible;
    }

    .facets__form-inner {
      opacity: 0;
      transition: opacity .4s ease-in;
    }

    collection-filtering-form.is-open .facets__form-inner {
      opacity: 1;
    }

    collection-filtering-form .navigation-toggle {
      display: block;
      padding-left: 0;
      width: 44px;
      margin-left: auto;
      margin-right: -14px;
    }

    @media (min-width: 769px) {
      collection-filtering-form .navigation-toggle {
        display: none;
      }
    }

    collection-filtering-form .navigation-toggle button {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 44px;
      height: 44px;
    }

    collection-filtering-form .navigation-toggle button svg {
      width: 20px;
      height: 20px;
    }
  }

  {%- if section.settings.desktop_position == 'sidebar' -%}
    @media screen and (max-width: 768px) {
      .index-wrapper .collection-wrapper .collection-filtering-section:first-child {
        margin-top: 0;
      }

      .index-wrapper .collection-wrapper .collection-filtering-section + .index-wrapper .collection-wrapper .section-collection-grid {
        margin-top: -24px;
      }

      .collection-filters {
        margin-bottom: 0;
      }
    }

    @media screen and (min-width: 769px) {
      .collection-wrapper {
        display: grid;
        grid-template-columns: auto auto;
        column-gap: 24px;
      }
      .shopify-section {
        grid-row: auto;
        grid-column: span 2;
      }
      .collection-wrapper .collection-filtering-section {
        grid-column: span 1;
        width: 250px;
        justify-self: end;
        padding-right: 0;
      }
      .collection-wrapper .section-collection-grid + .collection-filtering-section {
        justify-self: unset;
        padding-right: 40px;
        padding-left: 0;
        margin-left: 0;
      }
      .collection-wrapper .section-collection-grid {
        padding-left: 40px;
        padding-right: 0;
        margin-right: 0;
      }
      .collection-wrapper .collection-filtering-section + .section-collection-grid {
        padding-right: 40px;
        padding-left: 0;
        margin-left: 0;
      }
      .collection-wrapper .collection-filtering-section {
        padding-left: 40px;
        margin-right: 0;
      }
      .section-collection-grid {
        grid-column: span 1;
        grid-row: span 4;
      }
      .collection-wrapper .section-collection-grid .collection-main-wrapper {
        margin: 0 0 0 auto;
        max-width: 1006px;
      }
      .collection-wrapper .collection-filtering-section + .section-collection-grid .collection-main-wrapper {
        margin-top: 24px;
        margin-left: 0;
      }
      .collection-filters .collection-filters__sort {
        width: 100%;
      }
    }

    a.active-facets__button {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      position: relative;
    }

    a.active-facets__button:not(:first-child) {
      padding-right: calc(var(--body-size)*2.5);
    }

    .collection-filters {
      border: 0;
    }

    .facets__form-inner {
      display: flex !important;
      flex-direction: column-reverse;
      gap: 0;
    }

    .facets__wrapper {
      display: block !important;
    }

    .facets__wrapper,
    .sorting {
      margin-bottom: 2.5rem;
    }
  {%- endif -%}

  @media screen and (max-width: 768px) {
    .facets__form-inner {
      display: flex !important;
      flex-direction: column-reverse;
      gap: 0;
    }

    .facets__wrapper {
      display: block !important;
    }

    .facets__wrapper,
    .sorting {
      margin-bottom: 2.5rem;
    }
  }
</style>

{% schema %}
{
  "name": "Collection filtering",
  "tag": "section",
  "class": "collection-filtering-section spaced-section",
  "blocks": [
    {
      "type": "image",
      "name": "Image",
      "limit": 1,
      "settings": [
        {
            "type": "paragraph",
            "content": "This is used to set the order and placement of the collection image within the collection header"
        }
      ]
    },
    {
      "type": "title",
      "name": "Name",
      "limit": 1,
      "settings": [
        {
            "type": "paragraph",
            "content": "This is used to set the order and placement of the collection name within the collection header"
        }
      ]
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1,
      "settings": [
        {
            "type": "paragraph",
            "content": "This is used to set the order and placement of the collection description within the collection header"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "header",
      "content": "Filtering and sorting"
    },
    {
      "type": "select",
      "id": "desktop_position",
      "options": [
        {
          "value": "topbar",
          "label": "Top bar"
        },
        {
          "value": "sidebar",
          "label": "Sidebar"
        }
      ],
      "default": "topbar",
      "label": "Desktop position"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "Enable filtering",
      "info": "[Customize filters](/admin/menus)"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "Enable sorting"
    }
  ]
}
{% endschema %}
